<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.myblogssm.mapper.ArticleMapper">
    <resultMap id="baseMap" type="com.example.myblogssm.entity.Article">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="createtime" property="createTime"/>
        <result column="updatetime" property="updateTime"/>
        <result column="uid" property="uid"/>
        <result column="rcount" property="rcount"/>
        <result column="state" property="state"/>
    </resultMap>

    <insert id="addArticle">
        insert into articleinfo(title, content, uid)
        values (#{title}, #{content}, #{uid})
    </insert>

    <insert id="addArticleSchedule">
        insert into articleinfo(title, content, uid, createtime, state)
        values (#{title}, #{content}, #{uid}, #{createTime}, #{state})
    </insert>

    <insert id="addDraft">
        insert into articleinfo(title, content, uid, state)
        values (#{title}, #{content}, #{uid}, #{state})
    </insert>

    <update id="updateRCount">
        update articleinfo
        set rcount = rcount + 1
        where id = #{id}
    </update>

    <update id="updateArticle">
        update articleinfo
        set title      = #{title},
            content    = #{content},
            updatetime = now()
        where id = #{id}
          and uid = #{uid}
    </update>

    <update id="updateState">
        update articleinfo
        set createtime = now(),
            updatetime = now(),
            state      = #{state}
        where id = #{id}
    </update>

    <select id="queryArticleTotalByUid" resultType="java.lang.Integer">
        select count(*)
        from articleinfo
        where uid = #{uid}
    </select>

    <select id="qryUserArtListByUid" resultMap="baseMap">
        select *
        from articleinfo
        where uid = #{uid}
        limit #{pageSize} offset #{startIndex}
    </select>

    <select id="qryUserArtListByUidSortDate" resultMap="baseMap">
        select *
        from articleinfo
        where uid = #{uid}
        order by updatetime desc
        limit #{pageSize} offset #{startIndex}
    </select>

    <select id="qryUserArtListByUidSortRCount" resultMap="baseMap">
        select *
        from articleinfo
        where uid = #{uid}
        order by rcount desc
        limit #{pageSize} offset #{startIndex}
    </select>

    <select id="queryArticleById" resultMap="baseMap">
        select *
        from articleinfo
        where id = #{id} and state = 1
    </select>

    <select id="queryArticleByIdUid" resultMap="baseMap">
        select *
        from articleinfo
        where id = #{id} and uid = #{uid}
    </select>

    <select id="queryArtList" resultMap="baseMap">
        select *
        from articleinfo
        where state = 1
        limit #{pageSize} offset #{startIndex}
    </select>

    <select id="queryArtListSortDate" resultMap="baseMap">
        select *
        from articleinfo
        where state = 1
        order by updatetime desc
        limit #{pageSize} offset #{startIndex}
    </select>

    <select id="queryArtListSortRCount" resultMap="baseMap">
        select *
        from articleinfo
        where state = 1
        order by rcount desc
        limit #{pageSize} offset #{startIndex}
    </select>

    <select id="queryArtListByTitle" resultMap="baseMap">
        select *
        from articleinfo
        where state = 1
          and title like CONCAT('%', #{searchInfo}, '%')
        limit #{pageSize} offset #{startIndex}
    </select>

    <select id="queryArtListByTitleSortDate" resultMap="baseMap">
        select *
        from articleinfo
        where state = 1
          and title like CONCAT('%', #{searchInfo}, '%')
        order by updatetime desc
        limit #{pageSize} offset #{startIndex}
    </select>

    <select id="queryArtListByTitleSortRCount" resultMap="baseMap">
        select *
        from articleinfo
        where state = 1
          and title like CONCAT('%', #{searchInfo}, '%')
        order by rcount desc
        limit #{pageSize} offset #{startIndex}
    </select>

    <select id="queryArticleCount" resultType="java.lang.Integer">
        select count(*)
        from articleinfo
        where state = 1
    </select>

    <select id="queryArticleCountByTitle" resultType="java.lang.Integer">
        select count(*)
        from articleinfo
        where state = 1
          and title like CONCAT('%', #{searchInfo}, '%')
    </select>

    <select id="queryIdExist" resultType="java.lang.Integer">
        select count(*)
        from articleinfo
        where id = #{id}
    </select>

    <select id="queryNeedToPublish" resultMap="baseMap">
        select *
        from articleinfo
        where createtime &lt; #{currentTime}
          and state = -1
    </select>


    <delete id="delArticleById">
        delete
        from articleinfo
        where id = #{id}
          and uid = #{uid}
    </delete>

</mapper>